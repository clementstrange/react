{"ast":null,"code":"var _jsxFileName = \"/Users/cs/Development/react/tictac/src/App.js\",\n  _s = $RefreshSig$();\n// [x] For the current move only, show “You are at move #…” instead of a button.\n// [x] Rewrite Board to use two loops to make the squares instead of hardcoding them.\n// [x] When someone wins, highlight the three squares that caused the win (and when no one wins, display a message about the result being a draw).\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isWinning\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinning ? 'winning' : ''}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nexport default function Game() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [isAIOpponent, setIsAIOpponent] = useState(true);\n  const currentSquares = history[currentMove];\n  function makeAIMove(squares) {\n    const availableMoves = squares.map((square, index) => square === null ? index : null).filter(move => move !== null);\n    const randomMove = availableMoves[Math.floor(Math.random() * availableMoves.length)];\n    const nextSquares = squares.slice();\n    nextSquares[randomMove] = \"O\";\n    return nextSquares;\n  }\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXIsNext(!xIsNext);\n    if (isAIOpponent && !xIsNext && !calculateWinner(nextSquares)) {\n      setTimeout(() => {\n        const aiSquares = makeAIMove(nextSquares);\n        const aiHistory = [...nextHistory, aiSquares];\n        setHistory(aiHistory);\n        setCurrentMove(aiHistory.length - 1);\n        setXIsNext(true);\n      }, 500);\n    }\n  }\n  // Add useEffect to handle AI's first move\n  useEffect(() => {\n    if (isAIOpponent && !xIsNext && currentMove === 0) {\n      const aiSquares = makeAIMove(currentSquares);\n      const nextHistory = [...history, aiSquares];\n      setHistory(nextHistory);\n      setCurrentMove(1);\n      setXIsNext(true);\n    }\n  }, [isAIOpponent, xIsNext]);\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    const isXNext = nextMove % 2 === 0;\n    setXIsNext(isXNext);\n\n    // Make AI move if jumping to a position where it's O's turn\n    if (isAIOpponent && !isXNext) {\n      setTimeout(() => {\n        const aiSquares = makeAIMove(history[nextMove]);\n        const nextHistory = [...history.slice(0, nextMove + 1), aiSquares];\n        setHistory(nextHistory);\n        setCurrentMove(nextMove + 1);\n        setXIsNext(true);\n      }, 500);\n    }\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Move ' + move;\n    } else {\n      description = 'Game start';\n    }\n    if (move === currentMove) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: description\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-toggle\",\n        onClick: () => setIsAIOpponent(!isAIOpponent),\n        children: isAIOpponent ? 'Play vs Human' : 'Play vs AI'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"dwuffJ6lYEORJ2mtItW2L85bfV4=\");\n_c2 = Game;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  // const [xIsNext,setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n    onPlay(nextSquares);\n  }\n  const winInfo = calculateWinner(squares);\n  let status;\n  if (winInfo) {\n    status = \"Winner: \" + winInfo.winner;\n  } else if (squares.every(square => square !== null)) {\n    status = \"Draw - Game Over!\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const boardRows = [];\n  for (let row = 0; row < 3; row++) {\n    const squaresInRow = [];\n    for (let col = 0; col < 3; col++) {\n      const i = row * 3 + col;\n      const isWinning = winInfo === null || winInfo === void 0 ? void 0 : winInfo.winLine.includes(i);\n      squaresInRow.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[i],\n        onSquareClick: () => handleClick(i),\n        isWinning: isWinning\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this));\n    }\n    boardRows.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squaresInRow\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), boardRows]\n  }, void 0, true);\n}\n_c3 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        winLine: [a, b, c]\n      };\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Game\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isWinning","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Game","_s","xIsNext","setXIsNext","history","setHistory","Array","fill","currentMove","setCurrentMove","isAIOpponent","setIsAIOpponent","currentSquares","makeAIMove","squares","availableMoves","map","square","index","filter","move","randomMove","Math","floor","random","length","nextSquares","slice","handlePlay","nextHistory","calculateWinner","setTimeout","aiSquares","aiHistory","jumpTo","nextMove","isXNext","moves","description","Board","onPlay","_c2","handleClick","i","winInfo","status","winner","every","boardRows","row","squaresInRow","col","winLine","includes","push","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/cs/Development/react/tictac/src/App.js"],"sourcesContent":["// [x] For the current move only, show “You are at move #…” instead of a button.\n// [x] Rewrite Board to use two loops to make the squares instead of hardcoding them.\n// [x] When someone wins, highlight the three squares that caused the win (and when no one wins, display a message about the result being a draw).\n\nimport {useState,useEffect} from 'react';\nfunction Square ({value, onSquareClick, isWinning}) {\n  return <button className={`square ${isWinning ? 'winning': ''}`}\n  onClick = {onSquareClick}>{value}</button>\n}\n\nexport default function Game() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove,setCurrentMove] = useState(0);\n  const [isAIOpponent,setIsAIOpponent] = useState(true)\n  const currentSquares = history[currentMove];\n  \n  function makeAIMove(squares) {\n    const availableMoves = squares\n      .map((square,index) => (square === null ? index:null))\n      .filter(move => move !== null);\n    const randomMove = availableMoves[Math.floor(Math.random()*availableMoves.length)];\n    const nextSquares = squares.slice()\n    nextSquares[randomMove] = \"O\";\n    return nextSquares;\n  }\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove +1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length-1)\n    setXIsNext(!xIsNext);\n    if (isAIOpponent && !xIsNext && !calculateWinner(nextSquares)) {\n      setTimeout(() => {\n        const aiSquares = makeAIMove(nextSquares);\n        const aiHistory = [...nextHistory,aiSquares];\n        setHistory(aiHistory);\n        setCurrentMove(aiHistory.length - 1);\n        setXIsNext(true);\n      },500);\n    }\n  } \n  // Add useEffect to handle AI's first move\n  useEffect(() => {\n    if (isAIOpponent && !xIsNext && currentMove === 0) {\n      const aiSquares = makeAIMove(currentSquares);\n      const nextHistory = [...history, aiSquares];\n      setHistory(nextHistory);\n      setCurrentMove(1);\n      setXIsNext(true);\n    }\n  }, [isAIOpponent, xIsNext]);\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    const isXNext = nextMove % 2 === 0;\n    setXIsNext(isXNext);\n    \n    // Make AI move if jumping to a position where it's O's turn\n    if (isAIOpponent && !isXNext) {\n      setTimeout(() => {\n        const aiSquares = makeAIMove(history[nextMove]);\n        const nextHistory = [...history.slice(0, nextMove + 1), aiSquares];\n        setHistory(nextHistory);\n        setCurrentMove(nextMove + 1);\n        setXIsNext(true);\n      }, 500);\n    }\n  }\n  const moves = history.map((squares,move) => {\n    let description;\n    if (move>0) {\n      description = 'Move ' + move;\n    } else {\n      description = 'Game start';\n    }\n    \n    if (move === currentMove) {\n      return <li key = {move}>{description}</li>;\n    } else {\n      return <li key={move}>\n        <button onClick = {() => jumpTo(move)}>{description}</button>\n      </li>;\n      }  \n    });\n\n\n\n  return (\n    <div className = \"game\">\n      <div className = \"game-board\">\n        <Board xIsNext = {xIsNext} squares={currentSquares} onPlay={handlePlay} />\n        <button className=\"ai-toggle\"\n        onClick = {()=>setIsAIOpponent(!isAIOpponent)}\n        >\n          {isAIOpponent ? 'Play vs Human' : 'Play vs AI'}\n        </button>\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n} \n\n\nfunction Board({xIsNext, squares,onPlay}) {\n  // const [xIsNext,setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n  \n  function handleClick(i){\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n     nextSquares[i] = \"O\"; \n    }\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n    onPlay(nextSquares)\n  }\n  const winInfo = calculateWinner(squares);\n  let status;\n  if (winInfo) {\n    status = \"Winner: \" + winInfo.winner;\n  } else if (squares.every(square => square !== null)){\n    status = \"Draw - Game Over!\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  \n  const boardRows = [];\n\n  for (let row = 0; row < 3; row++) {\n    const squaresInRow = [];\n    for (let col = 0; col<3;col++) {\n      const i = row * 3 + col\n      const isWinning = winInfo?.winLine.includes(i)\n      squaresInRow.push(<Square key={i} value ={squares[i]} onSquareClick = {() => handleClick(i)} isWinning = {isWinning}/>\n      \n    );\n    }\n    boardRows.push(\n      <div key = {row} className = \"board-row\">{squaresInRow}</div>\n    );\n  }\n\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {boardRows}\n      {/* <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div> */}\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i<lines.length; i++) {\n    const [a,b,c] = lines[i];\n    if (squares[a] && squares [a] === squares[b] && squares[a] === squares[c]){\n      return {\n        winner: squares[a],\n        winLine: [a,b,c]\n    };\n  }\n  }\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}