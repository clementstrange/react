{"ast":null,"code":"var _jsxFileName = \"/Users/cs/Development/react/tictac/src/App.js\",\n  _s = $RefreshSig$();\n// [x] For the current move only, show “You are at move #…” instead of a button.\n// [] Rewrite Board to use two loops to make the squares instead of hardcoding them.\n// [] Add a toggle button that lets you sort the moves in either ascending or descending order.\n// [] When someone wins, highlight the three squares that caused the win (and when no one wins, display a message about the result being a draw).\n// [] Display the location for each move in the format (row, col) in the move history list.\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nexport default function Game() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXIsNext(!xIsNext);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setXIsNext(nextMove % 2 === 0);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Move ' + move;\n    } else {\n      description = 'Game start';\n    }\n    if (move === currentMove) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: description\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"ZReGT8DT+ZQFP5xQLzNXgXYYCZw=\");\n_c2 = Game;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  // const [xIsNext,setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const boardRows = [];\n  for (let row = 0; row < 3; row++) {\n    const squaresInRow = [];\n    for (let col = 0; col < 3; col++) {\n      const i = row * 3 + col;\n      squaresInRow.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[i],\n        onSquareClick: () => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this));\n    }\n    boardRows.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squaresInRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), boardRows]\n  }, void 0, true);\n}\n_c3 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Game\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Game","_s","xIsNext","setXIsNext","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextSquares","nextHistory","slice","length","jumpTo","nextMove","moves","map","squares","move","description","Board","onPlay","_c2","handleClick","i","calculateWinner","winner","status","boardRows","row","squaresInRow","col","push","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/cs/Development/react/tictac/src/App.js"],"sourcesContent":["// [x] For the current move only, show “You are at move #…” instead of a button.\n// [] Rewrite Board to use two loops to make the squares instead of hardcoding them.\n// [] Add a toggle button that lets you sort the moves in either ascending or descending order.\n// [] When someone wins, highlight the three squares that caused the win (and when no one wins, display a message about the result being a draw).\n// [] Display the location for each move in the format (row, col) in the move history list.\n\nimport {useState} from 'react';\n\nfunction Square ({value, onSquareClick}) {\n  return <button className=\"square\" onClick = {onSquareClick}>{value}</button>\n}\n\nexport default function Game() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove,setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  \n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove +1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length-1)\n    setXIsNext(!xIsNext);\n  } \n  \n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setXIsNext(nextMove % 2 === 0);\n  }\n  const moves = history.map((squares,move) => {\n    let description;\n    if (move>0) {\n      description = 'Move ' + move;\n    } else {\n      description = 'Game start';\n    }\n    \n    if (move === currentMove) {\n      return <li key = {move}>{description}</li>;\n    } else {\n      return <li key={move}>\n        <button onClick = {() => jumpTo(move)}>{description}</button>\n      </li>;\n      }  \n    });\n\n\n\n  return (\n    <div className = \"game\">\n      <div className = \"game-board\">\n        <Board xIsNext = {xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n} \n\n\nfunction Board({xIsNext, squares,onPlay}) {\n  // const [xIsNext,setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n  \n  function handleClick(i){\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n     nextSquares[i] = \"O\"; \n    }\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n    onPlay(nextSquares)\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  \n  const boardRows = [];\n\n  for (let row = 0; row < 3; row++) {\n    const squaresInRow = [];\n    for (let col = 0; col<3;col++) {\n      const i = row * 3 + col\n      squaresInRow.push(<Square value ={squares[i]} onSquareClick = {() => handleClick(i)}/>\n    );\n    }\n    boardRows.push(\n      <div className = \"board-row\">{squaresInRow}</div>\n    );\n  }\n\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {boardRows}\n      {/* <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div> */}\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i<lines.length; i++) {\n    const [a,b,c] = lines[i];\n    if (squares[a] && squares [a] === squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}